<?xml version="1.0" encoding="utf-8"?>

<!--as our activity_main.xml is having navigation drawer, we must have DrawerLayout as our root element-->
<!--also for navigation drawer we are having NavigationView at last-->


<androidx.drawerlayout.widget.DrawerLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:fitsSystemWindows="true"
    tools:openDrawer="start"
    tools:context="com.yadneshDesale.musicPlayer.MainActivity">


<!--    for refreshing layout on swipe from top-->

<!--    to implement the Swipe down to refresh feature in our app we will use the android SwipeRefreshLayout.-->
<!--    SwipeRefreshLayout is a widget that detects vertical swipe, shows a simple progress bar and then triggers a callback so that developers can fetch the data or do some other task in our android app.-->
<!--    we have to add dependency for it, in build.gradle-->

    <androidx.swiperefreshlayout.widget.SwipeRefreshLayout
        android:id="@+id/refreshLayout"
        android:layout_width="match_parent"
        android:layout_height="match_parent">
        <androidx.constraintlayout.widget.ConstraintLayout
            android:layout_width="match_parent"
            android:layout_height="match_parent">

            <LinearLayout
                android:layout_width="match_parent"
                android:layout_height="0dp"
                android:orientation="vertical"
                app:layout_constraintBottom_toTopOf="@id/nowPlaying"
                app:layout_constraintTop_toTopOf="parent">

                <!--for buttons-->
                <LinearLayout
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:orientation="horizontal">

<!--                    The AppCompat Support Library defines several useful styles for Buttons, each of which extend a base Widget.AppCompat.-->
<!--                    Button style that is applied to all buttons by default if you are using an AppCompat theme. -->
<!--                    This style helps ensure that all buttons look the same by default following the Material Design specification.-->

                    <!--shuffle Button-->
                    <Button
                        android:id="@+id/shuffleBtn"
                        style="@style/Widget.AppCompat.Button.Borderless"
                        android:layout_width="wrap_content"
                        android:layout_height="match_parent"
                        android:layout_weight="1"
                        android:contentDescription="@string/shuffle_btn"
                        android:drawableTop="@drawable/shuffle_icon"
                        android:text="@string/shuffle_btn"
                        android:textAllCaps="false"
                        android:textColor="?colorOnPrimary" />

                    <!--Favourites Button-->
                    <Button
                        android:id="@+id/favouriteBtn"
                        style="@style/Widget.AppCompat.Button.Borderless"
                        android:layout_width="wrap_content"
                        android:layout_height="match_parent"
                        android:layout_weight="1"
                        android:contentDescription="@string/favourites_btn"
                        android:drawableTop="@drawable/favourite_icon"
                        android:text="@string/favourites_btn"
                        android:textAllCaps="false"
                        android:textColor="?colorOnPrimary" />

                    <!--Playlists Button-->
                    <Button
                        android:id="@+id/playlistBtn"
                        style="@style/Widget.AppCompat.Button.Borderless"
                        android:layout_width="wrap_content"
                        android:layout_height="match_parent"
                        android:layout_weight="1"
                        android:contentDescription="@string/playlist_btn"
                        android:drawableTop="@drawable/playlist_icon"
                        android:text="@string/playlist_btn"
                        android:textAllCaps="false"
                        android:textColor="?colorOnPrimary" />

                    <!--Play Next Button-->
                    <Button
                        android:id="@+id/playNextBtn"
                        style="@style/Widget.AppCompat.Button.Borderless"
                        android:layout_width="wrap_content"
                        android:layout_height="match_parent"
                        android:layout_weight="1"
                        android:contentDescription="@string/playlist_btn"
                        android:drawableTop="@drawable/play_next_icon"
                        android:text="@string/play_next"
                        android:textAllCaps="false"
                        android:textColor="?colorOnPrimary" />

                </LinearLayout>

                <!--Total Songs Button-->
                <TextView
                    android:id="@+id/totalSongs"
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:layout_margin="10dp"
                    android:text="@string/total_songs"
                    android:textColor="?colorOnPrimary" />

<!--                adding RecyclerView for list of songs-->
<!--                scrollbar is added in using scrollbars attribute-->

                <androidx.recyclerview.widget.RecyclerView
                    android:id="@+id/musicRV"
                    android:layout_width="match_parent"
                    android:layout_height="match_parent"
                    android:scrollbarThumbVertical="@drawable/scroll_bar_icon"
                    android:scrollbars="vertical" />

            </LinearLayout>
            <androidx.fragment.app.FragmentContainerView
                android:id="@+id/nowPlaying"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                app:layout_constraintBottom_toBottomOf="parent"
                app:layout_constraintEnd_toEndOf="parent"
                app:layout_constraintStart_toStartOf="parent"
                android:name="com.yadneshDesale.musicPlayer.NowPlaying"
                tools:layout="@layout/fragment_now_playing"
                android:visibility="gone"/>
        </androidx.constraintlayout.widget.ConstraintLayout>
    </androidx.swiperefreshlayout.widget.SwipeRefreshLayout>


<!--    NavigationView has to essential components - 1. HeaderView 2. Menu-->
<!--    HeaderView : displayed at the top of the Navigation Drawer. To add the layout into our NavigationView, the app:headerLayout parameter is used.-->
<!--    Menu : displayed below the HeaderView and it contains all the navigation items in the form of a list. To add the layout into the NavigationView , the app:menus parameter is used-->

    <com.google.android.material.navigation.NavigationView
        android:id="@+id/navView"
        android:layout_width="wrap_content"
        android:layout_height="match_parent"
        android:layout_gravity="start"
        android:fitsSystemWindows="true"
        app:headerLayout="@layout/nav_header"
        app:menu="@menu/nav_menu"/>

</androidx.drawerlayout.widget.DrawerLayout>